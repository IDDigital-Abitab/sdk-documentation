<!-- ## Agregar dependencia SPM

En Xcode, ir al menú File -> Add Package Dependencies (@TODO: traducir a español esto)
Utilizar esta url `https://github.com/IDDigital-Abitab/id-digital-ios-sdk`

## Agregar descripciones de uso de permisos

El SDK de ID Digital Abitab utiliza el permiso de cámara. Es responsabilidad de tu aplicación proporcionar una descripción de uso.
Para ello debes agregar una clave con el nombre `NSCameraUsageDescription` en tu archivo `Info.plist`

## Inicializar SDK

Para poder utilizar el SDK tienes que inicializarlo una única vez. Para ello deber proporcionar una `apiKey` válida.

```swift
import IDDigitalSDK

let apiKey = "JOwfMLO6..." // Debe estar guardada en un lugar seguro
await IDDigitalSDK.shared.initialize(apiKey: apiKey)
```

## Asociar dispositivo

Para poder comenzar a solicitar validaciones de un usuario, primero deberás tenerlo asociado a tu aplicación utilizando el método `associate`.

```swift
guard let presentingVC =  UIApplication.shared.keyWindow?.rootViewController else {
  print("Error: No se pudo encontrar la vista para presentar.")
  return
}

do {
  let document = Document(number: documentNumber)
  try await IDDigitalSDK.shared.associate(from: presentingVC, document: document)
} catch {
  // handle error
}
```

Si querés comprobar si un usuario puede ser asociado, pero aún no comenzar con el proceso de asociación, podés utilizar el método `canAssociate`.

```kotlin
val response = sdkInstance.canAssociate(
  document = Document(number = documentNumber),
  onError = {}
)
```

Para comprobar si existe una asociación:

```kotlin
val response = sdkInstance.isAssociated()
```

Para eliminar una asociación existente:

```kotlin
sdkInstance.removeAssociation()
``` -->
